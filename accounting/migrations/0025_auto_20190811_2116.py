# Generated by Django 2.1.7 on 2019-08-11 17:22

from django.db import migrations
from django.db.models.functions import Substr


def thirdpartyaccount2thirdparty(apps, schema_editor):
    Account = apps.get_model('accounting', 'Account')
    ThirdPartyAccount = apps.get_model('accounting', 'ThirdPartyAccount')
    ThirdParty = apps.get_model('accounting', 'ThirdParty')
    Transaction = apps.get_model('accounting', 'Transaction')
    for generic_number in ('4010000', '4110000', '4500000', '4670000'):
        generic_account = Account.objects.get(number=generic_number)
        accounts = Account.objects \
            .filter(number__startswith=generic_number[:3]) \
            .exclude(number=generic_number)
        for account in accounts:
            try:
                thirdpartyaccount = account.thirdpartyaccount
            except ThirdPartyAccount.DoesNotExist:
                thirdpartyaccount = None
            thirdparty = ThirdParty.objects.create(
                number=account.number[3:],
                title=account.title,
                iban=thirdpartyaccount and thirdpartyaccount.iban or "",
                bic=thirdpartyaccount and thirdpartyaccount.bic or "",
                client_number=thirdpartyaccount and thirdpartyaccount.client_number or ""
            )
            transactions = Transaction.objects.filter(account=account)
            transactions.update(account=generic_account, thirdparty=thirdparty)
            if thirdpartyaccount:
                thirdpartyaccount.delete()
            else:
                account.delete()
        try:
            generic_account.thirdpartyaccount.delete(keep_parents=True)
        except ThirdPartyAccount.DoesNotExist:
            pass


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0024_auto_20190811_2115'),
    ]

    operations = [
        migrations.RunPython(thirdpartyaccount2thirdparty)
    ]
